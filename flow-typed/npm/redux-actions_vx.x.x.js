// flow-typed signature: 06f397f27134db30b2183da0bb74bb88
// flow-typed version: <<STUB>>/redux-actions_v^2.0.1/flow_v0.46.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'redux-actions'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare type reduxActions$Action<T, A> = {
  payload: A,
  type: T
}

declare type reduxActions$ActionMeta<M> = {
  meta: M
}

declare type reduxActions$ActionError<T> = {
  error: true,
  payload: Error,
  type: T
}
declare type reduxActions$PayloadCreator<A, B> = (A) => B

declare type reduxActions$MetaCreator<A, M> = (A) => M

declare type reduxActions$ActionCreator<T, A, B, M> = (A) => reduxActions$Action<T, A>

declare type reduxActions$ActionMetaCreator<T, A, B, M> = (A) => reduxActions$ActionMeta<T, A> & reduxActions$ActionMeta<M>

declare type reduxActions$ActionCreatorError<T, B> = (Error) => reduxActions$ActionError<T>

declare type reduxActions$ActionMetaCreatorError<T, B, M> = (Error) => reduxActions$ActionError<T> & reduxActions$ActionMeta<M>

declare module 'redux-actions' {
  declare export function createAction<T, A, B> (type: T, payloadCreator?: reduxActions$PayloadCreator<A, B>): reduxActions$ActionCreator<T, A, B> & reduxActions$ActionCreatorError<T, B>

  declare export type Action<T, A> = reduxActions$Action<T, A>
  declare export type ActionMeta<T, A, M> = reduxActions$Action<T, A> & reduxActions$ActionMeta<M>
  declare export type Error<T> = reduxActions$ActionError<T>
  declare export type ErrorMeta<T, M> = reduxActions$ActionError<T> & reduxActions$ActionMeta<M>

  declare export function createAction<T, A, B, M> (type: T, payloadCreator?: reduxActions$PayloadCreator<A, B>, metaCreator: reduxActions$MetaCreator<A, M>): reduxActions$ActionMetaCreator<T, A, B, M> & reduxActions$ActionMetaCreatorError<T, B, M>
}
